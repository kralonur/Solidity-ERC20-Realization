/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Token, ERC20TokenInterface } from "../ERC20Token";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112da806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f191461013457806370a08231146101505780639dc29fac14610180578063a9059cbb1461019c578063dd62ed3e146101cc57610093565b8063095ea7b31461009857806318160ddd146100c857806323b872dd146100e6578063313ce56714610116575b600080fd5b6100b260048036038101906100ad9190610d17565b6101fc565b6040516100bf9190610e98565b60405180910390f35b6100d0610213565b6040516100dd9190610fb3565b60405180910390f35b61010060048036038101906100fb9190610cc8565b61021c565b60405161010d9190610e98565b60405180910390f35b61011e6103ee565b60405161012b9190610fce565b60405180910390f35b61014e60048036038101906101499190610d17565b6103f7565b005b61016a60048036038101906101659190610c63565b61053f565b6040516101779190610fb3565b60405180910390f35b61019a60048036038101906101959190610d17565b610588565b005b6101b660048036038101906101b19190610d17565b610758565b6040516101c39190610e98565b60405180910390f35b6101e660048036038101906101e19190610c8c565b61076f565b6040516101f39190610fb3565b60405180910390f35b60006102093384846107f6565b6001905092915050565b60008054905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610f73565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f490610f93565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610f33565b60405180910390fd5b6103d7853385846103d29190611050565b6107f6565b6103e28585856109c1565b60019150509392505050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e90610ef3565b60405180910390fd5b806000808282546104789190610ffa565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ce9190610ffa565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105339190610fb3565b60405180910390a35050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef90610ef3565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690610eb3565b60405180910390fd5b816000808282546106909190611050565b9250508190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e69190611050565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074b9190610fb3565b60405180910390a3505050565b60006107653384846109c1565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90610f53565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90610f93565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109b49190610fb3565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2890610f73565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890610f13565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a90610ed3565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b729190611050565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc89190610ffa565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c2c9190610fb3565b60405180910390a3505050565b600081359050610c4881611276565b92915050565b600081359050610c5d8161128d565b92915050565b600060208284031215610c7557600080fd5b6000610c8384828501610c39565b91505092915050565b60008060408385031215610c9f57600080fd5b6000610cad85828601610c39565b9250506020610cbe85828601610c39565b9150509250929050565b600080600060608486031215610cdd57600080fd5b6000610ceb86828701610c39565b9350506020610cfc86828701610c39565b9250506040610d0d86828701610c4e565b9150509250925092565b60008060408385031215610d2a57600080fd5b6000610d3885828601610c39565b9250506020610d4985828601610c4e565b9150509250929050565b610d5c81611096565b82525050565b6000610d6f601e83610fe9565b9150610d7a82611108565b602082019050919050565b6000610d92602383610fe9565b9150610d9d82611131565b604082019050919050565b6000610db5601b83610fe9565b9150610dc082611180565b602082019050919050565b6000610dd8601d83610fe9565b9150610de3826111a9565b602082019050919050565b6000610dfb601883610fe9565b9150610e06826111d2565b602082019050919050565b6000610e1e601983610fe9565b9150610e29826111fb565b602082019050919050565b6000610e41601a83610fe9565b9150610e4c82611224565b602082019050919050565b6000610e64601b83610fe9565b9150610e6f8261124d565b602082019050919050565b610e83816110c2565b82525050565b610e92816110cc565b82525050565b6000602082019050610ead6000830184610d53565b92915050565b60006020820190508181036000830152610ecc81610d62565b9050919050565b60006020820190508181036000830152610eec81610d85565b9050919050565b60006020820190508181036000830152610f0c81610da8565b9050919050565b60006020820190508181036000830152610f2c81610dcb565b9050919050565b60006020820190508181036000830152610f4c81610dee565b9050919050565b60006020820190508181036000830152610f6c81610e11565b9050919050565b60006020820190508181036000830152610f8c81610e34565b9050919050565b60006020820190508181036000830152610fac81610e57565b9050919050565b6000602082019050610fc86000830184610e7a565b92915050565b6000602082019050610fe36000830184610e89565b92915050565b600082825260208201905092915050565b6000611005826110c2565b9150611010836110c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611045576110446110d9565b5b828201905092915050565b600061105b826110c2565b9150611066836110c2565b925082821015611079576110786110d9565b5b828203905092915050565b600061108f826110a2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f416d6f756e742065786365656473206163636f756e742062616c616e63650000600082015250565b7f416d6f756e742065786365656473207468652073656e64657227732062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b7f4163636f756e7420616464726573732063616e6e6f7420626520300000000000600082015250565b7f526563697069656e7420616464726573732063616e6e6f742062652030000000600082015250565b7f416d6f756e74206578636565647320616c6c6f77616e63650000000000000000600082015250565b7f4f776e657220616464726573732063616e6e6f74206265203000000000000000600082015250565b7f53656e64657220616464726573732063616e6e6f742062652030000000000000600082015250565b7f5370656e64657220616464726573732063616e6e6f7420626520300000000000600082015250565b61127f81611084565b811461128a57600080fd5b50565b611296816110c2565b81146112a157600080fd5b5056fea26469706673582212207f5847494d3d15e064a33e3487ac9e62b210cd5ca0c1a6690577ced89ecf2e8964736f6c63430008040033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Token> {
    return super.deploy(overrides || {}) as Promise<ERC20Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
